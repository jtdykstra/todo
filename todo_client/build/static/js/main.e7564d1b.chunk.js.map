{"version":3,"sources":["App.js","index.js"],"names":["Form","props","onSubmit","handleFormSubmit","type","value","formVal","onChange","e","onFormChange","Table","rows","data","map","row","index","key","reminder","unixTime","onClick","handleClick","id","App","useState","reminderData","setReminderData","Date","reminderDate","setReminderDate","setFormVal","useEffect","fetch","then","res","json","catch","error","console","selected","date","showTimeSelect","timeFormat","timeIntervals","timeCaption","dateFormat","event","target","log","toSubmit","getTime","method","headers","body","JSON","stringify","preventDefault","i","deletion","ReactDOM","render","document","getElementById"],"mappings":"yLAQA,SAASA,EAAKC,GACZ,OAAO,0BAAMC,SAAUD,EAAME,kBACzB,2CAEE,2BAAOC,KAAK,OAAOC,MAAOJ,EAAMK,QAASC,SAAU,SAAAC,GAAC,OAAIP,EAAMQ,aAAaD,MAF7E,SAKA,2BAAOJ,KAAK,SAASC,MAAM,YAIjC,SAASK,EAAMT,GACb,IAAMU,EAAOV,EAAMW,KAAKC,KAAI,SAACC,EAAKC,GAChC,OACE,wBAAIC,IAAKD,GACP,4BAAKD,EAAIG,UACT,4BAAKH,EAAII,UACT,4BACE,4BAAQC,QAAS,WAAOlB,EAAMmB,YAAYN,EAAIO,MAA9C,gBAMR,OAAO,+BACC,+BACGV,IA+FEW,MA1Ff,SAAarB,GAAO,MAEsBsB,mBAAS,IAF/B,mBAEXC,EAFW,KAEGC,EAFH,OAGsBF,mBAAS,IAAIG,MAHnC,mBAGXC,EAHW,KAGGC,EAHH,OAIYL,mBAAS,IAJrB,mBAIXjB,EAJW,KAIFuB,EAJE,KAiElB,OA3DAC,qBAAU,WACRC,MAAM,kCACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAApB,GACJa,EAAgBb,MAEjBuB,OAAM,SAACC,GACNC,QAAQD,MAAM,SAAUA,QAEzB,IAmDC,6BACI,kBAAC,IAAD,CACEE,SAAUX,EACVpB,SAAU,SAAAgC,GAASX,EAAgBW,IACnCC,gBAAc,EACdC,WAAW,QACXC,cAAe,GACfC,YAAY,OACZC,WAAW,yBAEf,kBAAC5C,EAAD,CACEM,QAAWA,EACXG,aAjBR,SAA0BoC,GACxBhB,EAAWgB,EAAMC,OAAOzC,QAiBlBF,iBAzCR,SAA0B0C,GACxBR,QAAQU,IAAIzC,GACZ,IAAI0C,EAAW,CAAC,SAAW1C,EAAS,SAAWqB,EAAasB,WAE5DlB,MAAM,iCAAkC,CACtCmB,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUN,KAEtBhB,MAAK,WACJD,MAAM,kCAAkCC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAApB,GACnEa,EAAgBb,SAGnBuB,OAAM,SAACC,GACNC,QAAQD,MAAM,SAAUA,MAG1BS,EAAMU,oBAQJ,gBAgBE,kBAAC7C,EAAD,CACEE,KAAMY,EACNJ,YAnER,SAAqBoC,GACnB,IAAMC,EAAW,CAAE,OAAUD,GAE7BzB,MAAM,+BAAgC,CACpCmB,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUG,KAEtBtB,OAAM,SAACC,GACNC,QAAQD,MAAM,SAAUA,MAG1BL,MAAM,kCACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAApB,GACJa,EAAgBb,WCnEtB8C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.e7564d1b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n// TODO: Double click delete fix\n// TODO: Authentication\n// TODO: Update of table on backend timer deletion?\n\nfunction Form(props) {\n  return <form onSubmit={props.handleFormSubmit}>\n      <label>\n        Reminder:\n        <input type=\"text\" value={props.formVal} onChange={e => props.onFormChange(e)} /> \n        Time:\n      </label>\n      <input type=\"submit\" value=\"Submit\" />\n    </form>\n}\n\nfunction Table(props) {\n  const rows = props.data.map((row, index) => {\n    return (\n      <tr key={index}>\n        <td>{row.reminder}</td>\n        <td>{row.unixTime}</td>\n        <td>\n          <button onClick={() => {props.handleClick(row.id)}}>Delete!</button>\n        </td>\n      </tr>\n    )\n  })\n\n  return <table>\n          <tbody>\n            {rows}\n          </tbody>\n         </table>\n}\n\nfunction App(props) {\n  // Remind data array\n  const [reminderData, setReminderData] = useState([]);\n  const [reminderDate, setReminderDate] = useState(new Date());\n  const [formVal, setFormVal] = useState('')\n\n  useEffect(() => { \n    fetch('http://localhost:5000/reminder')\n    .then(res => res.json())\n    .then(data => {\n      setReminderData(data);\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n  }, []);\n\n  function handleClick(i) {\n    const deletion = { 'delete': i };\n\n    fetch('http://localhost:5000/delete', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(deletion),\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n\n    fetch('http://localhost:5000/reminder')\n    .then(res => res.json())\n    .then(data => {\n      setReminderData(data);\n    });\n  }\n\n  function handleFormSubmit(event) {\n    console.log(formVal)\n    let toSubmit = {'reminder':formVal, 'unixTime':reminderDate.getTime()}\n    \n    fetch('http://localhost:5000/reminder', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(toSubmit),\n    })\n    .then(() => {\n      fetch('http://localhost:5000/reminder').then(res => res.json()).then(data => {\n        setReminderData(data);\n      });\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n\n    event.preventDefault();\n  }\n\n  function handleFormChange(event) {\n    setFormVal(event.target.value);\n  }\n  \n  return (\n      <div>\n          <DatePicker\n            selected={reminderDate}\n            onChange={date => {setReminderDate(date)}}\n            showTimeSelect\n            timeFormat=\"HH:mm\"\n            timeIntervals={15}\n            timeCaption=\"time\"\n            dateFormat=\"MMMM d, yyyy h:mm aa\"\n          />\n        <Form \n          formVal = {formVal}\n          onFormChange={handleFormChange}\n          handleFormSubmit={handleFormSubmit}\n        />\n        Table Entries\n        <Table \n          data={reminderData} \n          handleClick={handleClick} \n        /> \n      </div>\n  );\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App.js'\n\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}